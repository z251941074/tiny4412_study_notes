
hello_pg.o：     文件格式 elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x22b>
  400248:	78 38                	js     400282 <_init-0x21e>
  40024a:	36                   	ss
  40024b:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 18                	add    %bl,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 3e                	add    %bh,(%rsi)
  400285:	06                   	(bad)  
  400286:	0a 0e                	or     (%rsi),%cl
  400288:	61                   	(bad)  
  400289:	67 16                	addr32 (bad) 
  40028b:	05 21 23 5b 99       	add    $0x995b2321,%eax
  400290:	de c3                	faddp  %st,%st(3)
  400292:	d2 d0                	rcl    %cl,%al
  400294:	51                   	push   %rcx
  400295:	3d                   	.byte 0x3d
  400296:	b6 a5                	mov    $0xa5,%dh

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	02 00                	add    (%rax),%al
  40029a:	00 00                	add    %al,(%rax)
  40029c:	06                   	(bad)  
  40029d:	00 00                	add    %al,(%rax)
  40029f:	00 01                	add    %al,(%rcx)
  4002a1:	00 00                	add    %al,(%rax)
  4002a3:	00 06                	add    %al,(%rsi)
	...
  4002ad:	00 00                	add    %al,(%rax)
  4002af:	22 00                	and    (%rax),%al
  4002b1:	00 00                	add    %al,(%rax)
  4002b3:	00 06                	add    %al,(%rsi)
  4002b5:	00 00                	add    %al,(%rax)
  4002b7:	00 79 7f             	add    %bh,0x7f(%rcx)
  4002ba:	5f                   	pop    %rdi
  4002bb:	8c                   	.byte 0x8c

Disassembly of section .dynsym:

00000000004002c0 <.dynsym>:
	...
  4002d8:	0b 00                	or     (%rax),%eax
  4002da:	00 00                	add    %al,(%rax)
  4002dc:	12 00                	adc    (%rax),%al
	...
  4002ee:	00 00                	add    %al,(%rax)
  4002f0:	34 00                	xor    $0x0,%al
  4002f2:	00 00                	add    %al,(%rax)
  4002f4:	12 00                	adc    (%rax),%al
	...
  400306:	00 00                	add    %al,(%rax)
  400308:	1d 00 00 00 12       	sbb    $0x12000000,%eax
	...
  40031d:	00 00                	add    %al,(%rax)
  40031f:	00 46 00             	add    %al,0x0(%rsi)
  400322:	00 00                	add    %al,(%rax)
  400324:	12 00                	adc    (%rax),%al
	...
  400336:	00 00                	add    %al,(%rax)
  400338:	12 00                	adc    (%rax),%al
  40033a:	00 00                	add    %al,(%rax)
  40033c:	12 00                	adc    (%rax),%al
	...
  40034e:	00 00                	add    %al,(%rax)
  400350:	2a 00                	sub    (%rax),%al
  400352:	00 00                	add    %al,(%rax)
  400354:	12 00                	adc    (%rax),%al
  400356:	00 00                	add    %al,(%rax)
  400358:	e0 04                	loopne 40035e <_init-0x142>
  40035a:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400368 <.dynstr>:
  400368:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40036c:	63 2e                	movslq (%rsi),%ebp
  40036e:	73 6f                	jae    4003df <_init-0xc1>
  400370:	2e 36 00 70 72       	cs add %dh,%cs:%ss:0x72(%rax)
  400375:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  40037c:	66                   	data16
  40037d:	65 6e                	outsb  %gs:(%rsi),(%dx)
  40037f:	74 72                	je     4003f3 <_init-0xad>
  400381:	79 5f                	jns    4003e2 <_init-0xbe>
  400383:	5f                   	pop    %rdi
  400384:	00 5f 5f             	add    %bl,0x5f(%rdi)
  400387:	6d                   	insl   (%dx),%es:(%rdi)
  400388:	6f                   	outsl  %ds:(%rsi),(%dx)
  400389:	6e                   	outsb  %ds:(%rsi),(%dx)
  40038a:	73 74                	jae    400400 <_init-0xa0>
  40038c:	61                   	(bad)  
  40038d:	72 74                	jb     400403 <_init-0x9d>
  40038f:	75 70                	jne    400401 <_init-0x9f>
  400391:	00 5f 6d             	add    %bl,0x6d(%rdi)
  400394:	63 6c 65 61          	movslq 0x61(%rbp,%riz,2),%ebp
  400398:	6e                   	outsb  %ds:(%rsi),(%dx)
  400399:	75 70                	jne    40040b <_init-0x95>
  40039b:	00 5f 5f             	add    %bl,0x5f(%rdi)
  40039e:	6c                   	insb   (%dx),%es:(%rdi)
  40039f:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  4003a6:	72 74                	jb     40041c <_init-0x84>
  4003a8:	5f                   	pop    %rdi
  4003a9:	6d                   	insl   (%dx),%es:(%rdi)
  4003aa:	61                   	(bad)  
  4003ab:	69 6e 00 5f 5f 63 78 	imul   $0x78635f5f,0x0(%rsi),%ebp
  4003b2:	61                   	(bad)  
  4003b3:	5f                   	pop    %rdi
  4003b4:	61                   	(bad)  
  4003b5:	74 65                	je     40041c <_init-0x84>
  4003b7:	78 69                	js     400422 <_init-0x7e>
  4003b9:	74 00                	je     4003bb <_init-0xe5>
  4003bb:	47                   	rex.RXB
  4003bc:	4c                   	rex.WR
  4003bd:	49                   	rex.WB
  4003be:	42                   	rex.X
  4003bf:	43 5f                	rex.XB pop %r15
  4003c1:	32 2e                	xor    (%rsi),%ch
  4003c3:	31 33                	xor    %esi,(%rbx)
  4003c5:	00 47 4c             	add    %al,0x4c(%rdi)
  4003c8:	49                   	rex.WB
  4003c9:	42                   	rex.X
  4003ca:	43 5f                	rex.XB pop %r15
  4003cc:	32 2e                	xor    (%rsi),%ch
  4003ce:	32 2e                	xor    (%rsi),%ch
  4003d0:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003d2 <.gnu.version>:
  4003d2:	00 00                	add    %al,(%rax)
  4003d4:	02 00                	add    (%rax),%al
  4003d6:	02 00                	add    (%rax),%al
  4003d8:	02 00                	add    (%rax),%al
  4003da:	02 00                	add    (%rax),%al
  4003dc:	03 00                	add    (%rax),%eax
  4003de:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

00000000004003e0 <.gnu.version_r>:
  4003e0:	01 00                	add    %eax,(%rax)
  4003e2:	02 00                	add    (%rax),%al
  4003e4:	01 00                	add    %eax,(%rax)
  4003e6:	00 00                	add    %al,(%rax)
  4003e8:	10 00                	adc    %al,(%rax)
  4003ea:	00 00                	add    %al,(%rax)
  4003ec:	00 00                	add    %al,(%rax)
  4003ee:	00 00                	add    %al,(%rax)
  4003f0:	93                   	xchg   %eax,%ebx
  4003f1:	91                   	xchg   %eax,%ecx
  4003f2:	96                   	xchg   %eax,%esi
  4003f3:	06                   	(bad)  
  4003f4:	00 00                	add    %al,(%rax)
  4003f6:	03 00                	add    (%rax),%eax
  4003f8:	53                   	push   %rbx
  4003f9:	00 00                	add    %al,(%rax)
  4003fb:	00 10                	add    %dl,(%rax)
  4003fd:	00 00                	add    %al,(%rax)
  4003ff:	00 75 1a             	add    %dh,0x1a(%rbp)
  400402:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400408:	5e                   	pop    %rsi
  400409:	00 00                	add    %al,(%rax)
  40040b:	00 00                	add    %al,(%rax)
  40040d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000400410 <.rela.plt>:
  400410:	18 10                	sbb    %dl,(%rax)
  400412:	60                   	(bad)  
  400413:	00 00                	add    %al,(%rax)
  400415:	00 00                	add    %al,(%rax)
  400417:	00 07                	add    %al,(%rdi)
  400419:	00 00                	add    %al,(%rax)
  40041b:	00 01                	add    %al,(%rcx)
	...
  400425:	00 00                	add    %al,(%rax)
  400427:	00 20                	add    %ah,(%rax)
  400429:	10 60 00             	adc    %ah,0x0(%rax)
  40042c:	00 00                	add    %al,(%rax)
  40042e:	00 00                	add    %al,(%rax)
  400430:	07                   	(bad)  
  400431:	00 00                	add    %al,(%rax)
  400433:	00 06                	add    %al,(%rsi)
	...
  40043d:	00 00                	add    %al,(%rax)
  40043f:	00 28                	add    %ch,(%rax)
  400441:	10 60 00             	adc    %ah,0x0(%rax)
  400444:	00 00                	add    %al,(%rax)
  400446:	00 00                	add    %al,(%rax)
  400448:	07                   	(bad)  
  400449:	00 00                	add    %al,(%rax)
  40044b:	00 02                	add    %al,(%rdx)
	...
  400455:	00 00                	add    %al,(%rax)
  400457:	00 30                	add    %dh,(%rax)
  400459:	10 60 00             	adc    %ah,0x0(%rax)
  40045c:	00 00                	add    %al,(%rax)
  40045e:	00 00                	add    %al,(%rax)
  400460:	07                   	(bad)  
  400461:	00 00                	add    %al,(%rax)
  400463:	00 03                	add    %al,(%rbx)
	...
  40046d:	00 00                	add    %al,(%rax)
  40046f:	00 38                	add    %bh,(%rax)
  400471:	10 60 00             	adc    %ah,0x0(%rax)
  400474:	00 00                	add    %al,(%rax)
  400476:	00 00                	add    %al,(%rax)
  400478:	07                   	(bad)  
  400479:	00 00                	add    %al,(%rax)
  40047b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  400486:	00 00                	add    %al,(%rax)
  400488:	40 10 60 00          	adc    %spl,0x0(%rax)
  40048c:	00 00                	add    %al,(%rax)
  40048e:	00 00                	add    %al,(%rax)
  400490:	07                   	(bad)  
  400491:	00 00                	add    %al,(%rax)
  400493:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400499 <_init-0x7>
  400499:	00 00                	add    %al,(%rax)
  40049b:	00 00                	add    %al,(%rax)
  40049d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

00000000004004a0 <_init>:
  4004a0:	48 83 ec 08          	sub    $0x8,%rsp
  4004a4:	48 8d 05 b5 00 00 00 	lea    0xb5(%rip),%rax        # 400560 <__gmon_start__>
  4004ab:	48 85 c0             	test   %rax,%rax
  4004ae:	74 05                	je     4004b5 <_init+0x15>
  4004b0:	e8 ab 00 00 00       	callq  400560 <__gmon_start__>
  4004b5:	48 83 c4 08          	add    $0x8,%rsp
  4004b9:	c3                   	retq   

Disassembly of section .plt:

00000000004004c0 <printf@plt-0x10>:
  4004c0:	ff 35 42 0b 20 00    	pushq  0x200b42(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004c6:	ff 25 44 0b 20 00    	jmpq   *0x200b44(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004d0 <printf@plt>:
  4004d0:	ff 25 42 0b 20 00    	jmpq   *0x200b42(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4004d6:	68 00 00 00 00       	pushq  $0x0
  4004db:	e9 e0 ff ff ff       	jmpq   4004c0 <_init+0x20>

00000000004004e0 <_mcleanup@plt>:
  4004e0:	ff 25 3a 0b 20 00    	jmpq   *0x200b3a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004e6:	68 01 00 00 00       	pushq  $0x1
  4004eb:	e9 d0 ff ff ff       	jmpq   4004c0 <_init+0x20>

00000000004004f0 <__libc_start_main@plt>:
  4004f0:	ff 25 32 0b 20 00    	jmpq   *0x200b32(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004f6:	68 02 00 00 00       	pushq  $0x2
  4004fb:	e9 c0 ff ff ff       	jmpq   4004c0 <_init+0x20>

0000000000400500 <__monstartup@plt>:
  400500:	ff 25 2a 0b 20 00    	jmpq   *0x200b2a(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400506:	68 03 00 00 00       	pushq  $0x3
  40050b:	e9 b0 ff ff ff       	jmpq   4004c0 <_init+0x20>

0000000000400510 <__cxa_atexit@plt>:
  400510:	ff 25 22 0b 20 00    	jmpq   *0x200b22(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400516:	68 04 00 00 00       	pushq  $0x4
  40051b:	e9 a0 ff ff ff       	jmpq   4004c0 <_init+0x20>

0000000000400520 <__fentry__@plt>:
  400520:	ff 25 1a 0b 20 00    	jmpq   *0x200b1a(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400526:	68 05 00 00 00       	pushq  $0x5
  40052b:	e9 90 ff ff ff       	jmpq   4004c0 <_init+0x20>

Disassembly of section .text:

0000000000400530 <_start>:
  400530:	31 ed                	xor    %ebp,%ebp
  400532:	49 89 d1             	mov    %rdx,%r9
  400535:	5e                   	pop    %rsi
  400536:	48 89 e2             	mov    %rsp,%rdx
  400539:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40053d:	50                   	push   %rax
  40053e:	54                   	push   %rsp
  40053f:	49 c7 c0 f0 06 40 00 	mov    $0x4006f0,%r8
  400546:	48 c7 c1 80 06 40 00 	mov    $0x400680,%rcx
  40054d:	48 c7 c7 5d 06 40 00 	mov    $0x40065d,%rdi
  400554:	e8 97 ff ff ff       	callq  4004f0 <__libc_start_main@plt>
  400559:	f4                   	hlt    
  40055a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400560 <__gmon_start__>:
  400560:	8b 05 fa 0a 20 00    	mov    0x200afa(%rip),%eax        # 601060 <called.4261>
  400566:	85 c0                	test   %eax,%eax
  400568:	74 06                	je     400570 <__gmon_start__+0x10>
  40056a:	f3 c3                	repz retq 
  40056c:	0f 1f 40 00          	nopl   0x0(%rax)
  400570:	48 83 ec 08          	sub    $0x8,%rsp
  400574:	bf 30 05 40 00       	mov    $0x400530,%edi
  400579:	be 25 07 40 00       	mov    $0x400725,%esi
  40057e:	c7 05 d8 0a 20 00 01 	movl   $0x1,0x200ad8(%rip)        # 601060 <called.4261>
  400585:	00 00 00 
  400588:	e8 73 ff ff ff       	callq  400500 <__monstartup@plt>
  40058d:	bf e0 04 40 00       	mov    $0x4004e0,%edi
  400592:	48 83 c4 08          	add    $0x8,%rsp
  400596:	e9 65 01 00 00       	jmpq   400700 <atexit>
  40059b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004005a0 <deregister_tm_clones>:
  4005a0:	b8 5f 10 60 00       	mov    $0x60105f,%eax
  4005a5:	55                   	push   %rbp
  4005a6:	48 2d 58 10 60 00    	sub    $0x601058,%rax
  4005ac:	48 83 f8 0e          	cmp    $0xe,%rax
  4005b0:	48 89 e5             	mov    %rsp,%rbp
  4005b3:	77 02                	ja     4005b7 <deregister_tm_clones+0x17>
  4005b5:	5d                   	pop    %rbp
  4005b6:	c3                   	retq   
  4005b7:	b8 00 00 00 00       	mov    $0x0,%eax
  4005bc:	48 85 c0             	test   %rax,%rax
  4005bf:	74 f4                	je     4005b5 <deregister_tm_clones+0x15>
  4005c1:	5d                   	pop    %rbp
  4005c2:	bf 58 10 60 00       	mov    $0x601058,%edi
  4005c7:	ff e0                	jmpq   *%rax
  4005c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005d0 <register_tm_clones>:
  4005d0:	b8 58 10 60 00       	mov    $0x601058,%eax
  4005d5:	55                   	push   %rbp
  4005d6:	48 2d 58 10 60 00    	sub    $0x601058,%rax
  4005dc:	48 c1 f8 03          	sar    $0x3,%rax
  4005e0:	48 89 e5             	mov    %rsp,%rbp
  4005e3:	48 89 c2             	mov    %rax,%rdx
  4005e6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  4005ea:	48 01 d0             	add    %rdx,%rax
  4005ed:	48 d1 f8             	sar    %rax
  4005f0:	75 02                	jne    4005f4 <register_tm_clones+0x24>
  4005f2:	5d                   	pop    %rbp
  4005f3:	c3                   	retq   
  4005f4:	ba 00 00 00 00       	mov    $0x0,%edx
  4005f9:	48 85 d2             	test   %rdx,%rdx
  4005fc:	74 f4                	je     4005f2 <register_tm_clones+0x22>
  4005fe:	5d                   	pop    %rbp
  4005ff:	48 89 c6             	mov    %rax,%rsi
  400602:	bf 58 10 60 00       	mov    $0x601058,%edi
  400607:	ff e2                	jmpq   *%rdx
  400609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400610 <__do_global_dtors_aux>:
  400610:	80 3d 4d 0a 20 00 00 	cmpb   $0x0,0x200a4d(%rip)        # 601064 <completed.6973>
  400617:	75 11                	jne    40062a <__do_global_dtors_aux+0x1a>
  400619:	55                   	push   %rbp
  40061a:	48 89 e5             	mov    %rsp,%rbp
  40061d:	e8 7e ff ff ff       	callq  4005a0 <deregister_tm_clones>
  400622:	5d                   	pop    %rbp
  400623:	c6 05 3a 0a 20 00 01 	movb   $0x1,0x200a3a(%rip)        # 601064 <completed.6973>
  40062a:	f3 c3                	repz retq 
  40062c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400630 <frame_dummy>:
  400630:	48 83 3d 20 08 20 00 	cmpq   $0x0,0x200820(%rip)        # 600e58 <__JCR_END__>
  400637:	00 
  400638:	74 1e                	je     400658 <frame_dummy+0x28>
  40063a:	b8 00 00 00 00       	mov    $0x0,%eax
  40063f:	48 85 c0             	test   %rax,%rax
  400642:	74 14                	je     400658 <frame_dummy+0x28>
  400644:	55                   	push   %rbp
  400645:	bf 58 0e 60 00       	mov    $0x600e58,%edi
  40064a:	48 89 e5             	mov    %rsp,%rbp
  40064d:	ff d0                	callq  *%rax
  40064f:	5d                   	pop    %rbp
  400650:	e9 7b ff ff ff       	jmpq   4005d0 <register_tm_clones>
  400655:	0f 1f 00             	nopl   (%rax)
  400658:	e9 73 ff ff ff       	jmpq   4005d0 <register_tm_clones>

000000000040065d <main>:
  40065d:	e8 be fe ff ff       	callq  400520 <__fentry__@plt>
  400662:	55                   	push   %rbp
  400663:	48 89 e5             	mov    %rsp,%rbp
  400666:	bf 2c 07 40 00       	mov    $0x40072c,%edi
  40066b:	b8 00 00 00 00       	mov    $0x0,%eax
  400670:	e8 5b fe ff ff       	callq  4004d0 <printf@plt>
  400675:	b8 00 00 00 00       	mov    $0x0,%eax
  40067a:	5d                   	pop    %rbp
  40067b:	c3                   	retq   
  40067c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400680 <__libc_csu_init>:
  400680:	41 57                	push   %r15
  400682:	41 89 ff             	mov    %edi,%r15d
  400685:	41 56                	push   %r14
  400687:	49 89 f6             	mov    %rsi,%r14
  40068a:	41 55                	push   %r13
  40068c:	49 89 d5             	mov    %rdx,%r13
  40068f:	41 54                	push   %r12
  400691:	4c 8d 25 b0 07 20 00 	lea    0x2007b0(%rip),%r12        # 600e48 <__frame_dummy_init_array_entry>
  400698:	55                   	push   %rbp
  400699:	48 8d 2d b0 07 20 00 	lea    0x2007b0(%rip),%rbp        # 600e50 <__init_array_end>
  4006a0:	53                   	push   %rbx
  4006a1:	4c 29 e5             	sub    %r12,%rbp
  4006a4:	31 db                	xor    %ebx,%ebx
  4006a6:	48 c1 fd 03          	sar    $0x3,%rbp
  4006aa:	48 83 ec 08          	sub    $0x8,%rsp
  4006ae:	e8 ed fd ff ff       	callq  4004a0 <_init>
  4006b3:	48 85 ed             	test   %rbp,%rbp
  4006b6:	74 1e                	je     4006d6 <__libc_csu_init+0x56>
  4006b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4006bf:	00 
  4006c0:	4c 89 ea             	mov    %r13,%rdx
  4006c3:	4c 89 f6             	mov    %r14,%rsi
  4006c6:	44 89 ff             	mov    %r15d,%edi
  4006c9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4006cd:	48 83 c3 01          	add    $0x1,%rbx
  4006d1:	48 39 eb             	cmp    %rbp,%rbx
  4006d4:	75 ea                	jne    4006c0 <__libc_csu_init+0x40>
  4006d6:	48 83 c4 08          	add    $0x8,%rsp
  4006da:	5b                   	pop    %rbx
  4006db:	5d                   	pop    %rbp
  4006dc:	41 5c                	pop    %r12
  4006de:	41 5d                	pop    %r13
  4006e0:	41 5e                	pop    %r14
  4006e2:	41 5f                	pop    %r15
  4006e4:	c3                   	retq   
  4006e5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4006ec:	00 00 00 00 

00000000004006f0 <__libc_csu_fini>:
  4006f0:	f3 c3                	repz retq 
  4006f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4006f9:	00 00 00 
  4006fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400700 <atexit>:
  400700:	48 8d 05 49 09 20 00 	lea    0x200949(%rip),%rax        # 601050 <__dso_handle>
  400707:	48 85 c0             	test   %rax,%rax
  40070a:	74 0a                	je     400716 <atexit+0x16>
  40070c:	48 8b 10             	mov    (%rax),%rdx
  40070f:	31 f6                	xor    %esi,%esi
  400711:	e9 fa fd ff ff       	jmpq   400510 <__cxa_atexit@plt>
  400716:	31 d2                	xor    %edx,%edx
  400718:	eb f5                	jmp    40070f <atexit+0xf>

Disassembly of section .fini:

000000000040071c <_fini>:
  40071c:	48 83 ec 08          	sub    $0x8,%rsp
  400720:	48 83 c4 08          	add    $0x8,%rsp
  400724:	c3                   	retq   

Disassembly of section .rodata:

0000000000400728 <_IO_stdin_used>:
  400728:	01 00                	add    %eax,(%rax)
  40072a:	02 00                	add    (%rax),%al
  40072c:	68 65 6c 6c 6f       	pushq  $0x6f6c6c65
  400731:	20 66 74             	and    %ah,0x74(%rsi)
  400734:	72 61                	jb     400797 <_IO_stdin_used+0x6f>
  400736:	63 65 00             	movslq 0x0(%rbp),%esp

Disassembly of section .eh_frame_hdr:

000000000040073c <.eh_frame_hdr>:
  40073c:	01 1b                	add    %ebx,(%rbx)
  40073e:	03 3b                	add    (%rbx),%edi
  400740:	40 00 00             	add    %al,(%rax)
  400743:	00 07                	add    %al,(%rdi)
  400745:	00 00                	add    %al,(%rax)
  400747:	00 84 fd ff ff a4 00 	add    %al,0xa4ffff(%rbp,%rdi,8)
  40074e:	00 00                	add    %al,(%rax)
  400750:	f4                   	hlt    
  400751:	fd                   	std    
  400752:	ff                   	(bad)  
  400753:	ff 5c 00 00          	lcallq *0x0(%rax,%rax,1)
  400757:	00 24 fe             	add    %ah,(%rsi,%rdi,8)
  40075a:	ff                   	(bad)  
  40075b:	ff 8c 00 00 00 21 ff 	decl   -0xdf0000(%rax,%rax,1)
  400762:	ff                   	(bad)  
  400763:	ff cc                	dec    %esp
  400765:	00 00                	add    %al,(%rax)
  400767:	00 44 ff ff          	add    %al,-0x1(%rdi,%rdi,8)
  40076b:	ff                   	(bad)  
  40076c:	ec                   	in     (%dx),%al
  40076d:	00 00                	add    %al,(%rax)
  40076f:	00 b4 ff ff ff 34 01 	add    %dh,0x134ffff(%rdi,%rdi,8)
  400776:	00 00                	add    %al,(%rax)
  400778:	c4                   	(bad)  
  400779:	ff                   	(bad)  
  40077a:	ff                   	(bad)  
  40077b:	ff 4c 01 00          	decl   0x0(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000400780 <__FRAME_END__-0x120>:
  400780:	14 00                	adc    $0x0,%al
  400782:	00 00                	add    %al,(%rax)
  400784:	00 00                	add    %al,(%rax)
  400786:	00 00                	add    %al,(%rax)
  400788:	01 7a 52             	add    %edi,0x52(%rdx)
  40078b:	00 01                	add    %al,(%rcx)
  40078d:	78 10                	js     40079f <_IO_stdin_used+0x77>
  40078f:	01 1b                	add    %ebx,(%rbx)
  400791:	0c 07                	or     $0x7,%al
  400793:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400799:	00 00                	add    %al,(%rax)
  40079b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40079e:	00 00                	add    %al,(%rax)
  4007a0:	90                   	nop
  4007a1:	fd                   	std    
  4007a2:	ff                   	(bad)  
  4007a3:	ff 2a                	ljmpq  *(%rdx)
	...
  4007ad:	00 00                	add    %al,(%rax)
  4007af:	00 14 00             	add    %dl,(%rax,%rax,1)
  4007b2:	00 00                	add    %al,(%rax)
  4007b4:	00 00                	add    %al,(%rax)
  4007b6:	00 00                	add    %al,(%rax)
  4007b8:	01 7a 52             	add    %edi,0x52(%rdx)
  4007bb:	00 01                	add    %al,(%rcx)
  4007bd:	78 10                	js     4007cf <_IO_stdin_used+0xa7>
  4007bf:	01 1b                	add    %ebx,(%rbx)
  4007c1:	0c 07                	or     $0x7,%al
  4007c3:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
  4007c9:	00 00                	add    %al,(%rax)
  4007cb:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4007ce:	00 00                	add    %al,(%rax)
  4007d0:	90                   	nop
  4007d1:	fd                   	std    
  4007d2:	ff                   	(bad)  
  4007d3:	ff                   	(bad)  
  4007d4:	3b 00                	cmp    (%rax),%eax
  4007d6:	00 00                	add    %al,(%rax)
  4007d8:	00 54 0e 10          	add    %dl,0x10(%rsi,%rcx,1)
  4007dc:	62                   	(bad)  
  4007dd:	0e                   	(bad)  
  4007de:	08 00                	or     %al,(%rax)
  4007e0:	24 00                	and    $0x0,%al
  4007e2:	00 00                	add    %al,(%rax)
  4007e4:	34 00                	xor    $0x0,%al
  4007e6:	00 00                	add    %al,(%rax)
  4007e8:	d8 fc                	fdivr  %st(4),%st
  4007ea:	ff                   	(bad)  
  4007eb:	ff 70 00             	pushq  0x0(%rax)
  4007ee:	00 00                	add    %al,(%rax)
  4007f0:	00 0e                	add    %cl,(%rsi)
  4007f2:	10 46 0e             	adc    %al,0xe(%rsi)
  4007f5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  4007f8:	0b 77 08             	or     0x8(%rdi),%esi
  4007fb:	80 00 3f             	addb   $0x3f,(%rax)
  4007fe:	1a 3b                	sbb    (%rbx),%bh
  400800:	2a 33                	sub    (%rbx),%dh
  400802:	24 22                	and    $0x22,%al
  400804:	00 00                	add    %al,(%rax)
  400806:	00 00                	add    %al,(%rax)
  400808:	1c 00                	sbb    $0x0,%al
  40080a:	00 00                	add    %al,(%rax)
  40080c:	5c                   	pop    %rsp
  40080d:	00 00                	add    %al,(%rax)
  40080f:	00 4d fe             	add    %cl,-0x2(%rbp)
  400812:	ff                   	(bad)  
  400813:	ff 1f                	lcallq *(%rdi)
  400815:	00 00                	add    %al,(%rax)
  400817:	00 00                	add    %al,(%rax)
  400819:	46 0e                	rex.RX (bad) 
  40081b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400821:	55                   	push   %rbp
  400822:	0c 07                	or     $0x7,%al
  400824:	08 00                	or     %al,(%rax)
  400826:	00 00                	add    %al,(%rax)
  400828:	44 00 00             	add    %r8b,(%rax)
  40082b:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
  40082f:	00 50 fe             	add    %dl,-0x2(%rax)
  400832:	ff                   	(bad)  
  400833:	ff 65 00             	jmpq   *0x0(%rbp)
  400836:	00 00                	add    %al,(%rax)
  400838:	00 42 0e             	add    %al,0xe(%rdx)
  40083b:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
  400841:	8e 03                	mov    (%rbx),%es
  400843:	45 0e                	rex.RB (bad) 
  400845:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
  40084b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701699 <_end+0xffffffff86100631>
  400851:	06                   	(bad)  
  400852:	48 0e                	rex.W (bad) 
  400854:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  40085a:	6c                   	insb   (%dx),%es:(%rdi)
  40085b:	0e                   	(bad)  
  40085c:	38 41 0e             	cmp    %al,0xe(%rcx)
  40085f:	30 41 0e             	xor    %al,0xe(%rcx)
  400862:	28 42 0e             	sub    %al,0xe(%rdx)
  400865:	20 42 0e             	and    %al,0xe(%rdx)
  400868:	18 42 0e             	sbb    %al,0xe(%rdx)
  40086b:	10 42 0e             	adc    %al,0xe(%rdx)
  40086e:	08 00                	or     %al,(%rax)
  400870:	14 00                	adc    $0x0,%al
  400872:	00 00                	add    %al,(%rax)
  400874:	c4                   	(bad)  
  400875:	00 00                	add    %al,(%rax)
  400877:	00 78 fe             	add    %bh,-0x2(%rax)
  40087a:	ff                   	(bad)  
  40087b:	ff 02                	incl   (%rdx)
	...
  400885:	00 00                	add    %al,(%rax)
  400887:	00 14 00             	add    %dl,(%rax,%rax,1)
  40088a:	00 00                	add    %al,(%rax)
  40088c:	dc 00                	faddl  (%rax)
  40088e:	00 00                	add    %al,(%rax)
  400890:	70 fe                	jo     400890 <_IO_stdin_used+0x168>
  400892:	ff                   	(bad)  
  400893:	ff 1a                	lcallq *(%rdx)
	...

00000000004008a0 <__FRAME_END__>:
  4008a0:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e48 <__frame_dummy_init_array_entry>:
  600e48:	30 06                	xor    %al,(%rsi)
  600e4a:	40 00 00             	add    %al,(%rax)
  600e4d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e50 <__do_global_dtors_aux_fini_array_entry>:
  600e50:	10 06                	adc    %al,(%rsi)
  600e52:	40 00 00             	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e58 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e60 <_DYNAMIC>:
  600e60:	01 00                	add    %eax,(%rax)
  600e62:	00 00                	add    %al,(%rax)
  600e64:	00 00                	add    %al,(%rax)
  600e66:	00 00                	add    %al,(%rax)
  600e68:	01 00                	add    %eax,(%rax)
  600e6a:	00 00                	add    %al,(%rax)
  600e6c:	00 00                	add    %al,(%rax)
  600e6e:	00 00                	add    %al,(%rax)
  600e70:	0c 00                	or     $0x0,%al
  600e72:	00 00                	add    %al,(%rax)
  600e74:	00 00                	add    %al,(%rax)
  600e76:	00 00                	add    %al,(%rax)
  600e78:	a0 04 40 00 00 00 00 	movabs 0xd00000000004004,%al
  600e7f:	00 0d 
  600e81:	00 00                	add    %al,(%rax)
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 07             	add    %bl,(%rdi,%rax,1)
  600e8a:	40 00 00             	add    %al,(%rax)
  600e8d:	00 00                	add    %al,(%rax)
  600e8f:	00 19                	add    %bl,(%rcx)
  600e91:	00 00                	add    %al,(%rax)
  600e93:	00 00                	add    %al,(%rax)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 48 0e             	add    %cl,0xe(%rax)
  600e9a:	60                   	(bad)  
  600e9b:	00 00                	add    %al,(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 1b                	add    %bl,(%rbx)
  600ea1:	00 00                	add    %al,(%rax)
  600ea3:	00 00                	add    %al,(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 08                	add    %cl,(%rax)
  600ea9:	00 00                	add    %al,(%rax)
  600eab:	00 00                	add    %al,(%rax)
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 1a                	add    %bl,(%rdx)
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 50 0e             	add    %dl,0xe(%rax)
  600eba:	60                   	(bad)  
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600ec2:	00 00                	add    %al,(%rax)
  600ec4:	00 00                	add    %al,(%rax)
  600ec6:	00 00                	add    %al,(%rax)
  600ec8:	08 00                	or     %al,(%rax)
  600eca:	00 00                	add    %al,(%rax)
  600ecc:	00 00                	add    %al,(%rax)
  600ece:	00 00                	add    %al,(%rax)
  600ed0:	f5                   	cmc    
  600ed1:	fe                   	(bad)  
  600ed2:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ee5 <_DYNAMIC+0x85>
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 68 03             	add    %ch,0x3(%rax)
  600eea:	40 00 00             	add    %al,(%rax)
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 06                	add    %al,(%rsi)
  600ef1:	00 00                	add    %al,(%rax)
  600ef3:	00 00                	add    %al,(%rax)
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 c0                	add    %al,%al
  600ef9:	02 40 00             	add    0x0(%rax),%al
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	0a 00                	or     (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	6a 00                	pushq  $0x0
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	0b 00                	or     (%rax),%eax
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	18 00                	sbb    %al,(%rax)
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 03                	add    %al,(%rbx)
	...
  600f39:	10 60 00             	adc    %ah,0x0(%rax)
  600f3c:	00 00                	add    %al,(%rax)
  600f3e:	00 00                	add    %al,(%rax)
  600f40:	02 00                	add    (%rax),%al
  600f42:	00 00                	add    %al,(%rax)
  600f44:	00 00                	add    %al,(%rax)
  600f46:	00 00                	add    %al,(%rax)
  600f48:	90                   	nop
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 14 00             	add    %dl,(%rax,%rax,1)
  600f52:	00 00                	add    %al,(%rax)
  600f54:	00 00                	add    %al,(%rax)
  600f56:	00 00                	add    %al,(%rax)
  600f58:	07                   	(bad)  
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 17                	add    %dl,(%rdi)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 10                	add    %dl,(%rax)
  600f69:	04 40                	add    $0x40,%al
  600f6b:	00 00                	add    %al,(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 fe                	add    %bh,%dh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 e0                	add    %ah,%al
  600f79:	03 40 00             	add    0x0(%rax),%eax
  600f7c:	00 00                	add    %al,(%rax)
  600f7e:	00 00                	add    %al,(%rax)
  600f80:	ff                   	(bad)  
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 01                	add    %al,(%rcx)
  600f89:	00 00                	add    %al,(%rax)
  600f8b:	00 00                	add    %al,(%rax)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 f0                	add    %dh,%al
  600f91:	ff                   	(bad)  
  600f92:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f95:	00 00                	add    %al,(%rax)
  600f97:	00 d2                	add    %dl,%dl
  600f99:	03 40 00             	add    0x0(%rax),%eax
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	60                   	(bad)  
  601001:	0e                   	(bad)  
  601002:	60                   	(bad)  
	...
  601017:	00 d6                	add    %dl,%dh
  601019:	04 40                	add    $0x40,%al
  60101b:	00 00                	add    %al,(%rax)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 e6                	add    %ah,%dh
  601021:	04 40                	add    $0x40,%al
  601023:	00 00                	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
  601027:	00 f6                	add    %dh,%dh
  601029:	04 40                	add    $0x40,%al
  60102b:	00 00                	add    %al,(%rax)
  60102d:	00 00                	add    %al,(%rax)
  60102f:	00 06                	add    %al,(%rsi)
  601031:	05 40 00 00 00       	add    $0x40,%eax
  601036:	00 00                	add    %al,(%rax)
  601038:	16                   	(bad)  
  601039:	05 40 00 00 00       	add    $0x40,%eax
  60103e:	00 00                	add    %al,(%rax)
  601040:	26                   	es
  601041:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .data:

0000000000601048 <__data_start>:
	...

0000000000601050 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601060 <called.4261>:
  601060:	00 00                	add    %al,(%rax)
	...

0000000000601064 <completed.6973>:
  601064:	00 00                	add    %al,(%rax)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400428>
   a:	74 75                	je     81 <_init-0x40041f>
   c:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
   f:	38 2e                	cmp    %ch,(%rsi)
  11:	34 2d                	xor    $0x2d,%al
  13:	32 75 62             	xor    0x62(%rbp),%dh
  16:	75 6e                	jne    86 <_init-0x40041a>
  18:	74 75                	je     8f <_init-0x400411>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	33 29                	xor    (%rcx),%ebp
  24:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  27:	38 2e                	cmp    %ch,(%rsi)
  29:	34 00                	xor    $0x0,%al
